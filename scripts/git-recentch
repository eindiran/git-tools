#!/usr/bin/env bash
#===============================================================================
#
#          FILE: git-recentch
#
#         USAGE: git recentch
#
#   DESCRIPTION: Get recent branches by local checkout time. For recent branches
#                ordered by commit, see `git-recentco`
#                Examples:
#                   `git recentch`    -> list all recent branches ordered by checkout
#                                        time and date.
#                   `git recentch 5`  -> list the 5 most recent branches, ordered
#                                         again by local checkout time and date.
#                   `git recentch -1` -> special command to totally override
#                                        num branches, so all branches are returned.
#
#  REQUIREMENTS: git
#
#        AUTHOR: Elliott Indiran <elliott.indiran@protonmail.com>
#===============================================================================
set -Eu
# rev-parse --verify will exit with 128 on missing branches, so make sure
# set -e and set -o pipefail are off

# See this SO post for inspiration: https://stackoverflow.com/questions/25095061
NUM_BRANCHES="${1:-20}" # default number of branches to display

if ((NUM_BRANCHES == -1)); then
    git reflog show --pretty=format:'%gs ~ %gd' |
        grep 'checkout:' |
        grep -E -io "moving from ([^[:space:]]+) to ([^[:space:]]+)" |
        awk '{ print $NF }' |
        awk '!seen[$0]++' |
        while read -r line; do
            git rev-parse --verify "$line" &>/dev/null && echo "$line"
        done
else
    git reflog show --pretty=format:'%gs ~ %gd' |
        grep 'checkout:' |
        grep -E -io "moving from ([^[:space:]]+) to ([^[:space:]]+)" |
        awk '{ print $NF }' |
        awk '!seen[$0]++' |
        while read -r line; do
            git rev-parse --verify "$line" &>/dev/null && echo "$line"
        done |
        head -n "$NUM_BRANCHES"
fi
