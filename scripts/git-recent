#!/usr/bin/env bash
#===============================================================================
#
#          FILE: git-recent
#
#         USAGE: git recent
#
#   DESCRIPTION: Get recent branches by commit time and date.
#                Examples:
#                   `git recent`   -> list all recent branches ordered by commit
#                                     time and date.
#                   `git recent 5` -> list the 5 most recent branches, ordered
#                                     again by time and date.
#
#  REQUIREMENTS: git
#
#        AUTHOR: Elliott Indiran <elliott.indiran@protonmail.com>
#===============================================================================
set -Eeuo pipefail

if [ "$#" -eq 1 ]; then
	show_count="${1}"
	git reflog show --pretty=format:'%gs ~ %gd' --date=relative |
		grep 'checkout:' |
		grep -oE '[^ ]+ ~ .*' |
		awk -F~ '!seen[$1]++' |
		head -n "${show_count}" |
		awk -F" ~ HEAD@{" '{printf(" * \033[33m%-15s-\033[37m  \033[32m%s\033[0m\n", substr($2, 1, length($2)-1), $1)}'
elif [ "$#" -eq 0 ]; then
	git reflog show --pretty=format:'%gs ~ %gd' --date=relative |
		grep 'checkout:' |
		grep -oE '[^ ]+ ~ .*' |
		awk -F~ '!seen[$1]++' |
		awk -F" ~ HEAD@{" '{printf(" * \033[33m%-15s-\033[37m  \033[32m%s\033[0m\n", substr($2, 1, length($2)-1), $1)}'
else
	# Number of args greater than 1, print usage
	printf "%s cannot take more than 1 argument!\n" "$0"
	exit 1
fi
